plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'kotlin-parcelize'
    id 'de.mannodermaus.android-junit5'
}

junitPlatform {
    configurationParameter("junit.jupiter.testinstance.lifecycle.default", "per_class")
}

def appPropertiesFile = rootProject.file("app.properties")
def appProperties = new Properties()
appProperties.load(new FileInputStream(appPropertiesFile))

android {
    namespace 'com.example.cityapiclient'
    compileSdk 33

    defaultConfig {

        buildConfigField("String", "WEB_CLIENT_ID", appProperties['WEB_CLIENT_ID'])
        buildConfigField("String", "KTOR_IP_ADDR", appProperties['KTOR_IP_ADDR'])

        applicationId "com.example.cityapiclient"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument("runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder")

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            aaptOptions {
                ignoreAssetsPattern '!*.ttf'
            }
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/licenses/**']
        }
        resources {
            excludes += ['META-INF/licenses/**', 'META-INF/AL2.0', 'META-INF/LGPL2.1', 'font']
        }
    }
    testOptions {

    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.1.0-alpha02'
    implementation "androidx.navigation:navigation-compose:2.5.3"

    // window layout
    implementation "androidx.window:window:1.1.0-alpha04"
    implementation "androidx.compose.material3:material3-window-size-class:1.1.0-alpha02"

    // hilt
    implementation 'com.google.dagger:hilt-android:2.43.2'
    kapt 'com.google.dagger:hilt-compiler:2.43.2'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // datastore
    //implementation "androidx.datastore:datastore-preferences-core:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha03"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.5.1"

    // ktor
    implementation "io.ktor:ktor-client-core:2.1.3"
    implementation "io.ktor:ktor-client-android:2.1.3"
    implementation "io.ktor:ktor-client-content-negotiation:2.1.3"
    implementation "io.ktor:ktor-serialization-kotlinx-json:2.1.3"
    implementation "io.ktor:ktor-client-logging:2.1.3"

    // google sign in
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4"
    implementation 'com.google.android.gms:play-services-auth:20.4.0'

    // ******* TESTING *******************************************************
    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.8.2"
    // (Optional) If you also have JUnit 4-based tests
    testImplementation "junit:junit:4.13.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.8.2"

    androidTestImplementation "androidx.test:runner:1.5.1"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.2"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.2"

    testImplementation "io.mockk:mockk:1.13.3"

    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation "io.ktor:ktor-client-mock:2.1.3"

    // serialization
    //implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2'

}